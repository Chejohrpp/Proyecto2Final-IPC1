/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import funcionalidades.*;
import java.awt.Container;
import javax.swing.JOptionPane;

/**
 *
 * @author chejohrpp
 */
public class PrePartida extends javax.swing.JFrame {
    JuegoBoard juegoC;
    Jugadores[] jugadores;
    AddJugadores[] adJugadores;
    DatosPrePartida datosPrePartida;
    JuegoGame juegoG;
    
    /**
     * Creates new form PrePartida
     */
    public PrePartida(JuegoBoard juegoC, JuegoGame juegoG) {
        initComponents();
        this.juegoC = juegoC;
        this.juegoG = juegoG;
        jugadores = new Jugadores[juegoC.getGeneral().getCantJugadores()];
        adJugadores = new AddJugadores[juegoC.getGeneral().getCantJugadores()];
        generar(jPanel1,juegoC.getGeneral().getCantJugadores());
    }
        
    private void generar(Container panel,int canJugadores){
        
        for (int i = 0; i < canJugadores; i++) {            
            AddJugadores addJugadores = new AddJugadores(i);
            panel.add(addJugadores.getJugador());
            panel.add(addJugadores.getNombre());
            panel.add(addJugadores.getCmb());
            addJugadores.getFormat(i+1);          
            adJugadores[i] = addJugadores;            
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTiempo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setText("Ingrese el tiempo del juego (minutos):");

        jLabel2.setText("0 es para tiempo infinito");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(txtTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 440, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
       if (esVacia() && verificarColores(juegoC.getGeneral().getCantJugadores()-1)) {
            for (int i = 0; i < adJugadores.length; i++) {
                jugadores[i] = adJugadores[i].getNewJugadores(); 
                
            }
            datosPrePartida = new DatosPrePartida(jugadores, Integer.parseInt(txtTiempo.getText()));
            juegoG.setDatosPrePartida(datosPrePartida);//Agregar el objeto game aqui            
            this.setVisible(false);
            PartidaGUI partida = new PartidaGUI(juegoC, juegoG);
       }
       
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Welcome welcome = new Welcome();
        welcome.setLocationRelativeTo(null);
        welcome.setVisible(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private boolean esVacia(){
        for (AddJugadores jugador : adJugadores) {
            if (jugador.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tiene que llenar todos los espacios");
                return false;                
            }
        }
        if (txtTiempo.getText().replaceAll(" ", "").isEmpty() ) {
            JOptionPane.showMessageDialog(null, "Tiene que llenar todos los espacios");
            return false;
        }
        return true;
    }
    private boolean verificarColores(int cantJugadores){
        int contVerificar = 0;
        while(true){            
            if (adJugadores[cantJugadores].getCmb().getSelectedItem().toString().equalsIgnoreCase(adJugadores[contVerificar].getCmb().getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(null, "solo se puede un color unico para cada jugador");
                return false;
            } else{
                if(cantJugadores-1 == contVerificar){
                    cantJugadores--;
                    contVerificar = -1;
                }                
                contVerificar++;
                if (cantJugadores == contVerificar && cantJugadores == 0) {
                    return true;
                } 
            }            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtTiempo;
    // End of variables declaration//GEN-END:variables
}
