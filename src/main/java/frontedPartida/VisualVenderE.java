/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontedPartida;

import Casillas.CasillaPropiedad;
import funcionalidades.Jugadores;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chejohrpp
 */
public class VisualVenderE extends javax.swing.JFrame {
    private Jugadores jugador;
    private DefaultTableModel dfm = new DefaultTableModel();
    private CasillaPropiedad propiedad;
    private int casaHotel;
    private int costo;
    /**
     * Creates new form VisualVenderE
     */
    public VisualVenderE(Jugadores jugador) {
        this.jugador = jugador;
        dfm = (DefaultTableModel) tableLista.getModel();
        initComponents();
        lblCosto.setVisible(false);
        generarC();
        generarT();
    }
    //generarmos las propiedaddes tipo lugar en el comboBbox
    private void generarC(){
        if (jugador.getCantPropiedades() != 0) {
            for (int i = 0; i < jugador.getPropiedades().length; i++) {
                if (jugador.getPropiedades()[i].getCasillaLugar() != null) {
                    cmbPropiedad.addItem(jugador.getPropiedades()[i].getNombre());
                }
            }
 
        }
    }
    private void generarT(){
        //Limpiar listado
       int cantRow = tableLista.getRowCount();
            for (int i = cantRow-1; i >= 0; i--) {
                dfm.removeRow(i);
            }       
        //Agregar listado
        if (jugador.getPropiedades() !=  null) {
            for (int i = 0; i < jugador.getPropiedades().length; i++) {
                if (jugador.getPropiedades()[i].getCasillaLugar() != null) {
                    String[] data = {jugador.getPropiedades()[i].getNombre(), String.valueOf(jugador.getPropiedades()[i].getCasillaLugar().getCantCasas()),
                    String.valueOf(jugador.getPropiedades()[i].getCasillaLugar().getCantHoteles())};
                    dfm.addRow(data);
                }                
            }
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableLista = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cmbPropiedad = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        lblCosto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad de casas", "Cantidad de hoteles"
            }
        ));
        jScrollPane1.setViewportView(tableLista);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Elija que edifico desea vender");

        cmbPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPropiedadActionPerformed(evt);
            }
        });

        jLabel2.setText("Cantidad:");

        btnAceptar.setText("vender");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lblCosto.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        lblCosto.setText("costo por edificio : 000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cmbPropiedad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCantidad)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(180, 180, 180)))
                                .addComponent(lblCosto, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnAceptar)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(cmbPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(lblCosto)
                .addGap(64, 64, 64)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPropiedadActionPerformed
        // TODO add your handling code here:
        if (cmbPropiedad.getSelectedItem() != null) {
            for (int i = 0; i < jugador.getPropiedades().length; i++) {
                if (cmbPropiedad.getSelectedItem().toString().equalsIgnoreCase(jugador.getPropiedades()[i].getNombre())) {
                    propiedad = jugador.getPropiedades()[i];
                    if (propiedad.getCasillaLugar().getCantCasas() != 0) {
                        costo = propiedad.getCasillaLugar().getPrecioCasa();
                        lblCosto.setText("Costo por cada casa: $" + costo);
                        lblCosto.setVisible(true);
                        btnAceptar.setEnabled(true);
                        casaHotel = 1;
                        
                    } else if (propiedad.getCasillaLugar().getCantHoteles() != 0) {
                        costo = propiedad.getCasillaLugar().getPrecioHotel();
                        lblCosto.setText("Costo por cada Hotel: $" + costo);
                        lblCosto.setVisible(true);
                        btnAceptar.setEnabled(true);
                        casaHotel = 2;
                        
                    } else {
                        lblCosto.setText("No tienes edificios en esta propieadad");
                        btnAceptar.setEnabled(false);
                    }
                }
            }
        }
    }//GEN-LAST:event_cmbPropiedadActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        try{
        if (cmbPropiedad.getSelectedIndex() != -1) {
            if (casaHotel == 1) {
                if (Integer.parseInt(txtCantidad.getText().toString()) < propiedad.getCasillaLugar().getCantCasas()) {
                    costo = costo*Integer.parseInt(txtCantidad.getText().toString()) ;
                    jugador.setRiqueza(jugador.getRiqueza() + costo);
                    jugador.setRiquezaTotal(jugador.getRiquezaTotal() + costo);
                    propiedad.getCasillaLugar().setCantCasas(propiedad.getCasillaLugar().getCantCasas() - Integer.parseInt(txtCantidad.getText().toString()) );
                    JOptionPane.showMessageDialog(null, "Vendido \n presiona actualizar para ver su nuevo saldo");
                }
            } else if (casaHotel == 2) {
                if (Integer.parseInt(txtCantidad.getText().toString()) < propiedad.getCasillaLugar().getCantHoteles()) {
                    costo = costo*Integer.parseInt(txtCantidad.getText().toString()) ;
                    jugador.setRiqueza(jugador.getRiqueza() + costo);
                    jugador.setRiquezaTotal(jugador.getRiquezaTotal() + costo);
                    propiedad.getCasillaLugar().setCantHoteles(propiedad.getCasillaLugar().getCantHoteles() - Integer.parseInt(txtCantidad.getText().toString()) );
                    JOptionPane.showMessageDialog(null, "Vendido \n presiona actualizar para ver su nuevo saldo");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay propiedad seleccionada");
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ingrese bien todos los datos");
        }
        generarT();
    }//GEN-LAST:event_btnAceptarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox<String> cmbPropiedad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JTable tableLista;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
